spring:
  profiles:
    active: blue
    group:
      dev: dev,common
      blue: blue,common,secret
      green: green,common,secret
  output:
    ansi:
      enabled: always

server:
  env: blue

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:tcp://localhost/~/test
    username: sa
  jpa:
    hibernate:
      # JPA가 테이블을 자동 생성
      ddl-auto: create
    # JPA가 생성하는 SQL 출력
    # show-sql: true
  cors:
    allowed-origins: http://localhost:3000
  jwt:
    secret: vmfhaltmskdlstkfkdgodyroqkfwkdbalroqkfwkdbalaaaaaaaaaaaaaaaabbbbb

server:
  port: 8081
  error:
    # 오류 정보 추가
    include-message: always

serverName: dev_server

---
spring:
  config:
    activate:
      on-profile: blue
  jpa:
    hibernate:
      # JPA가 테이블을 자동 생성
      ddl-auto: none

server:
  port: 8081
  error:
    # 오류 정보 추가
    include-message: always

serverName: blue_server

---
spring:
  config:
    activate:
      on-profile: green
  jpa:
    hibernate:
      # JPA가 테이블을 자동 생성
      ddl-auto: none

server:
  port: 8082
  error:
    # 오류 정보 추가
    include-message: always

serverName: green_server

---
spring:
  config:
    activate:
      on-profile: common

# JPA log
# 하이버네이트가 생성하고 실행하는 SQL을 확인
# SQL에 바인딩 되는 파라미터를 확인

#logging:
#  level:
#    org:
#      hibernate:
#        SQL: DEBUG
#        orm:
#          jdbc:
#            bind: TRACE
